<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{4B4CD802-9A55-3B35-8814-CEA60CECFA59}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>sdl_headers_copy</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_assert.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_assert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_assert.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_assert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_assert.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_assert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_assert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_assert.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_assert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_assert.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_assert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_assert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_assert.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_assert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_assert.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_assert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_assert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_assert.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_assert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_assert.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_assert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_atomic.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_atomic.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_atomic.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_atomic.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_atomic.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_atomic.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_atomic.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_atomic.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_atomic.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_atomic.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_atomic.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_atomic.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_atomic.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_atomic.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_atomic.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_atomic.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_atomic.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_atomic.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_atomic.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_atomic.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_atomic.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_audio.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_audio.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_audio.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_audio.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_audio.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_audio.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_audio.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_audio.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_audio.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_audio.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_audio.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_audio.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_audio.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_audio.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_audio.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_audio.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_audio.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_audio.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_audio.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_audio.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_audio.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_bits.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_bits.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_bits.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_bits.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_bits.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_bits.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_bits.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_bits.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_bits.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_bits.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_bits.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_bits.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_bits.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_bits.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_bits.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_bits.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_bits.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_bits.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_bits.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_bits.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_bits.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_blendmode.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_blendmode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_blendmode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_blendmode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_blendmode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_blendmode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_blendmode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_blendmode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_blendmode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_blendmode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_blendmode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_blendmode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_blendmode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_blendmode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_blendmode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_blendmode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_blendmode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_blendmode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_blendmode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_blendmode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_blendmode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_clipboard.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_clipboard.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_clipboard.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_clipboard.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_clipboard.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_clipboard.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_clipboard.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_clipboard.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_clipboard.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_clipboard.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_clipboard.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_clipboard.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_clipboard.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_clipboard.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_clipboard.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_clipboard.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_clipboard.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_clipboard.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_clipboard.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_clipboard.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_clipboard.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_copying.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_copying.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_copying.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_copying.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_copying.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_copying.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_copying.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_copying.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_copying.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_copying.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_copying.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_copying.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_copying.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_copying.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_copying.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_copying.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_copying.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_copying.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_copying.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_copying.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_copying.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_cpuinfo.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_cpuinfo.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_cpuinfo.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_cpuinfo.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_cpuinfo.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_cpuinfo.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_cpuinfo.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_cpuinfo.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_cpuinfo.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_cpuinfo.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_cpuinfo.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_cpuinfo.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_cpuinfo.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_cpuinfo.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_cpuinfo.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_cpuinfo.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_cpuinfo.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_cpuinfo.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_cpuinfo.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_cpuinfo.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_cpuinfo.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_egl.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_egl.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_egl.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_egl.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_egl.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_egl.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_egl.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_egl.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_egl.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_egl.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_egl.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_egl.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_egl.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_egl.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_egl.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_egl.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_egl.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_egl.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_egl.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_egl.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_egl.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_endian.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_endian.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_endian.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_endian.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_endian.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_endian.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_endian.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_endian.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_endian.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_endian.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_endian.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_endian.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_endian.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_endian.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_endian.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_endian.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_endian.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_endian.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_endian.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_endian.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_endian.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_error.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_error.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_error.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_error.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_error.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_error.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_error.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_error.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_error.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_error.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_error.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_error.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_error.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_error.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_error.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_error.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_error.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_error.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_error.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_error.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_error.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_events.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_events.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_events.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_events.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_events.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_events.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_events.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_events.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_events.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_events.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_events.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_events.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_events.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_events.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_events.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_events.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_events.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_events.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_events.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_events.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_events.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_filesystem.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_filesystem.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_filesystem.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_filesystem.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_filesystem.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_filesystem.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_filesystem.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_filesystem.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_filesystem.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_filesystem.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_filesystem.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_filesystem.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_filesystem.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_filesystem.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_filesystem.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_filesystem.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_filesystem.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_filesystem.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_filesystem.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_filesystem.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_filesystem.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_gamecontroller.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_gamecontroller.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_gamecontroller.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_gamecontroller.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_gamecontroller.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gamecontroller.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_gamecontroller.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_gamecontroller.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_gamecontroller.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_gamecontroller.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gamecontroller.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_gamecontroller.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_gamecontroller.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_gamecontroller.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_gamecontroller.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gamecontroller.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_gamecontroller.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_gamecontroller.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_gamecontroller.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_gamecontroller.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gamecontroller.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_gesture.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_gesture.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_gesture.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_gesture.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_gesture.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gesture.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_gesture.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_gesture.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_gesture.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_gesture.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gesture.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_gesture.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_gesture.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_gesture.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_gesture.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gesture.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_gesture.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_gesture.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_gesture.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_gesture.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gesture.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_guid.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_guid.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_guid.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_guid.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_guid.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_guid.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_guid.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_guid.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_guid.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_guid.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_guid.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_guid.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_guid.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_guid.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_guid.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_guid.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_guid.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_guid.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_guid.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_guid.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_guid.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_haptic.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_haptic.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_haptic.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_haptic.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_haptic.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_haptic.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_haptic.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_haptic.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_haptic.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_haptic.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_haptic.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_haptic.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_haptic.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_haptic.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_haptic.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_haptic.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_haptic.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_haptic.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_haptic.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_haptic.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_haptic.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_hidapi.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_hidapi.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_hidapi.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_hidapi.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_hidapi.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hidapi.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_hidapi.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_hidapi.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_hidapi.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_hidapi.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hidapi.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_hidapi.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_hidapi.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_hidapi.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_hidapi.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hidapi.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_hidapi.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_hidapi.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_hidapi.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_hidapi.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hidapi.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_hints.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_hints.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_hints.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_hints.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_hints.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hints.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_hints.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_hints.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_hints.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_hints.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hints.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_hints.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_hints.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_hints.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_hints.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hints.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_hints.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_hints.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_hints.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_hints.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hints.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_joystick.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_joystick.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_joystick.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_joystick.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_joystick.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_joystick.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_joystick.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_joystick.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_joystick.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_joystick.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_joystick.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_joystick.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_joystick.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_joystick.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_joystick.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_joystick.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_joystick.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_joystick.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_joystick.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_joystick.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_joystick.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_keyboard.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_keyboard.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_keyboard.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_keyboard.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_keyboard.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keyboard.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_keyboard.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_keyboard.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_keyboard.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_keyboard.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keyboard.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_keyboard.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_keyboard.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_keyboard.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_keyboard.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keyboard.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_keyboard.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_keyboard.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_keyboard.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_keyboard.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keyboard.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_keycode.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_keycode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_keycode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_keycode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_keycode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keycode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_keycode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_keycode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_keycode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_keycode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keycode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_keycode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_keycode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_keycode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_keycode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keycode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_keycode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_keycode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_keycode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_keycode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keycode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_loadso.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_loadso.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_loadso.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_loadso.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_loadso.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_loadso.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_loadso.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_loadso.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_loadso.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_loadso.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_loadso.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_loadso.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_loadso.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_loadso.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_loadso.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_loadso.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_loadso.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_loadso.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_loadso.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_loadso.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_loadso.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_locale.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_locale.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_locale.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_locale.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_locale.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_locale.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_locale.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_locale.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_locale.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_locale.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_locale.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_locale.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_locale.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_locale.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_locale.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_locale.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_locale.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_locale.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_locale.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_locale.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_locale.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_log.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_log.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_log.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_log.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_log.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_log.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_log.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_log.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_log.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_log.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_log.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_log.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_log.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_log.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_log.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_log.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_log.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_log.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_log.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_log.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_log.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_main.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_main.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_main.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_main.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_main.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_main.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_main.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_main.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_main.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_main.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_main.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_main.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_main.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_main.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_main.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_main.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_main.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_main.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_main.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_main.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_main.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_messagebox.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_messagebox.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_messagebox.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_messagebox.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_messagebox.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_messagebox.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_messagebox.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_messagebox.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_messagebox.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_messagebox.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_messagebox.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_messagebox.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_messagebox.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_messagebox.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_messagebox.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_messagebox.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_messagebox.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_messagebox.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_messagebox.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_messagebox.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_messagebox.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_metal.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_metal.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_metal.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_metal.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_metal.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_metal.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_metal.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_metal.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_metal.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_metal.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_metal.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_metal.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_metal.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_metal.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_metal.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_metal.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_metal.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_metal.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_metal.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_metal.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_metal.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_misc.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_misc.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_misc.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_misc.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_misc.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_misc.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_misc.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_misc.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_misc.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_misc.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_misc.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_misc.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_misc.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_misc.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_misc.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_misc.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_misc.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_misc.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_misc.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_misc.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_misc.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_mouse.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_mouse.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_mouse.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_mouse.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_mouse.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mouse.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_mouse.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_mouse.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_mouse.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_mouse.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mouse.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_mouse.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_mouse.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_mouse.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_mouse.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mouse.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_mouse.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_mouse.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_mouse.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_mouse.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mouse.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_mutex.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_mutex.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_mutex.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_mutex.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_mutex.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mutex.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_mutex.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_mutex.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_mutex.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_mutex.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mutex.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_mutex.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_mutex.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_mutex.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_mutex.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mutex.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_mutex.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_mutex.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_mutex.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_mutex.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mutex.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_name.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_name.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_name.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_name.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_name.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_name.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_name.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_name.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_name.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_name.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_name.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_name.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_name.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_name.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_name.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_name.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_name.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_name.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_name.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_name.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_name.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_opengl.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_opengl.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengl.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengl.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengl.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_opengl.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengl.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengl.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengl.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_opengl.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengl.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengl.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengl.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_opengl.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengl.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengl.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengl.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_opengl_glext.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_opengl_glext.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengl_glext.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengl_glext.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengl_glext.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl_glext.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_opengl_glext.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengl_glext.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengl_glext.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengl_glext.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl_glext.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_opengl_glext.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengl_glext.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengl_glext.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengl_glext.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl_glext.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_opengl_glext.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengl_glext.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengl_glext.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengl_glext.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl_glext.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_opengles.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_opengles.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_opengles.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_opengles.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_opengles.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_opengles2.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_opengles2.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_opengles2.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_opengles2.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_opengles2.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_opengles2_gl2.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_opengles2_gl2.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_opengles2_gl2.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_opengles2_gl2.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_opengles2_gl2.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_opengles2_gl2ext.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_opengles2_gl2ext.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2ext.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2ext.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2ext.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2ext.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_opengles2_gl2ext.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2ext.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2ext.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2ext.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2ext.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_opengles2_gl2ext.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2ext.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2ext.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2ext.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2ext.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_opengles2_gl2ext.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2ext.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2ext.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2ext.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2ext.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_opengles2_gl2platform.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_opengles2_gl2platform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2platform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2platform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2platform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2platform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_opengles2_gl2platform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2platform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2platform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2platform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2platform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_opengles2_gl2platform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2platform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2platform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2platform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2platform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_opengles2_gl2platform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_gl2platform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_gl2platform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_gl2platform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2platform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_opengles2_khrplatform.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_opengles2_khrplatform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_khrplatform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_khrplatform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_khrplatform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_khrplatform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_opengles2_khrplatform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_khrplatform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_khrplatform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_khrplatform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_khrplatform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_opengles2_khrplatform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_khrplatform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_khrplatform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_khrplatform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_khrplatform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_opengles2_khrplatform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_opengles2_khrplatform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_opengles2_khrplatform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_opengles2_khrplatform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_khrplatform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_pixels.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_pixels.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_pixels.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_pixels.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_pixels.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_pixels.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_pixels.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_pixels.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_pixels.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_pixels.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_pixels.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_pixels.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_pixels.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_pixels.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_pixels.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_pixels.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_pixels.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_pixels.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_pixels.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_pixels.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_pixels.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_platform.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_platform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_platform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_platform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_platform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_platform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_platform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_platform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_platform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_platform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_platform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_platform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_platform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_platform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_platform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_platform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_platform.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_platform.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_platform.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_platform.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_platform.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_power.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_power.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_power.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_power.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_power.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_power.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_power.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_power.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_power.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_power.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_power.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_power.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_power.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_power.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_power.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_power.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_power.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_power.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_power.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_power.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_power.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_quit.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_quit.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_quit.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_quit.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_quit.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_quit.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_quit.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_quit.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_quit.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_quit.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_quit.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_quit.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_quit.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_quit.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_quit.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_quit.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_quit.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_quit.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_quit.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_quit.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_quit.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_rect.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_rect.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_rect.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_rect.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_rect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rect.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_rect.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_rect.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_rect.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_rect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rect.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_rect.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_rect.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_rect.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_rect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rect.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_rect.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_rect.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_rect.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_rect.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rect.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_render.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_render.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_render.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_render.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_render.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_render.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_render.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_render.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_render.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_render.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_render.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_render.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_render.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_render.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_render.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_render.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_render.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_render.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_render.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_render.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_render.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_rwops.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_rwops.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_rwops.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_rwops.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_rwops.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rwops.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_rwops.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_rwops.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_rwops.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_rwops.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rwops.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_rwops.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_rwops.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_rwops.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_rwops.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rwops.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_rwops.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_rwops.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_rwops.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_rwops.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rwops.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_scancode.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_scancode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_scancode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_scancode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_scancode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_scancode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_scancode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_scancode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_scancode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_scancode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_scancode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_scancode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_scancode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_scancode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_scancode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_scancode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_scancode.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_scancode.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_scancode.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_scancode.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_scancode.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_sensor.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_sensor.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_sensor.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_sensor.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_sensor.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_sensor.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_sensor.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_sensor.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_sensor.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_sensor.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_sensor.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_sensor.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_sensor.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_sensor.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_sensor.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_sensor.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_sensor.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_sensor.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_sensor.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_sensor.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_sensor.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_shape.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_shape.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_shape.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_shape.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_shape.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_shape.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_shape.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_shape.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_shape.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_shape.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_shape.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_shape.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_shape.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_shape.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_shape.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_shape.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_shape.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_shape.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_shape.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_shape.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_shape.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_stdinc.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_stdinc.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_stdinc.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_stdinc.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_stdinc.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_stdinc.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_stdinc.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_stdinc.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_stdinc.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_stdinc.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_stdinc.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_stdinc.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_stdinc.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_stdinc.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_stdinc.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_stdinc.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_stdinc.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_stdinc.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_stdinc.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_stdinc.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_stdinc.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_surface.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_surface.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_surface.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_surface.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_surface.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_surface.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_surface.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_surface.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_surface.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_surface.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_surface.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_surface.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_surface.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_surface.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_surface.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_surface.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_surface.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_surface.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_surface.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_surface.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_surface.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_system.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_system.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_system.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_system.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_system.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_system.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_system.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_system.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_system.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_system.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_system.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_system.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_system.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_system.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_system.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_system.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_system.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_system.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_system.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_system.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_system.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_syswm.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_syswm.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_syswm.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_syswm.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_syswm.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_syswm.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_syswm.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_syswm.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_syswm.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_syswm.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_syswm.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_syswm.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_syswm.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_syswm.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_syswm.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_syswm.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_syswm.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_syswm.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_syswm.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_syswm.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_syswm.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_assert.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_assert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_assert.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_assert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_assert.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_assert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_assert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_assert.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_assert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_assert.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_assert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_assert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_assert.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_assert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_assert.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_assert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_assert.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_assert.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_assert.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_assert.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_assert.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_common.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_common.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_common.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_common.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_common.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_common.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_common.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_common.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_common.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_common.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_common.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_common.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_common.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_common.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_common.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_common.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_common.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_common.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_common.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_common.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_common.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_compare.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_compare.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_compare.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_compare.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_compare.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_compare.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_compare.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_compare.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_compare.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_compare.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_compare.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_compare.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_compare.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_compare.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_compare.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_compare.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_compare.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_compare.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_compare.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_compare.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_compare.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_crc32.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_crc32.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_crc32.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_crc32.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_crc32.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_crc32.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_crc32.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_crc32.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_crc32.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_crc32.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_crc32.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_crc32.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_crc32.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_crc32.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_crc32.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_crc32.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_crc32.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_crc32.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_crc32.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_crc32.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_crc32.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_font.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_font.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_font.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_font.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_font.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_font.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_font.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_font.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_font.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_font.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_font.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_font.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_font.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_font.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_font.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_font.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_font.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_font.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_font.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_font.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_font.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_fuzzer.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_fuzzer.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_fuzzer.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_fuzzer.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_fuzzer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_fuzzer.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_fuzzer.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_fuzzer.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_fuzzer.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_fuzzer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_fuzzer.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_fuzzer.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_fuzzer.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_fuzzer.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_fuzzer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_fuzzer.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_fuzzer.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_fuzzer.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_fuzzer.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_fuzzer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_fuzzer.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_harness.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_harness.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_harness.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_harness.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_harness.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_harness.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_harness.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_harness.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_harness.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_harness.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_harness.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_harness.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_harness.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_harness.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_harness.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_harness.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_harness.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_harness.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_harness.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_harness.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_harness.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_images.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_images.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_images.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_images.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_images.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_images.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_images.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_images.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_images.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_images.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_images.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_images.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_images.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_images.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_images.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_images.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_images.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_images.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_images.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_images.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_images.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_log.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_log.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_log.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_log.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_log.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_log.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_log.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_log.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_log.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_log.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_log.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_log.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_log.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_log.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_log.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_log.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_log.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_log.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_log.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_log.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_log.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_md5.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_md5.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_md5.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_md5.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_md5.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_md5.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_md5.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_md5.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_md5.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_md5.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_md5.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_md5.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_md5.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_md5.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_md5.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_md5.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_md5.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_md5.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_md5.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_md5.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_md5.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_memory.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_memory.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_memory.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_memory.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_memory.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_memory.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_memory.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_memory.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_memory.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_memory.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_memory.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_memory.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_memory.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_memory.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_memory.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_memory.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_memory.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_memory.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_memory.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_memory.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_memory.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_test_random.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_test_random.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_random.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_random.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_random.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_random.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_test_random.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_random.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_random.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_random.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_random.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_test_random.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_random.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_random.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_random.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_random.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_test_random.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_test_random.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_test_random.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_test_random.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_random.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_thread.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_thread.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_thread.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_thread.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_thread.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_thread.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_thread.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_thread.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_thread.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_thread.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_thread.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_thread.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_thread.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_thread.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_thread.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_thread.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_thread.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_thread.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_thread.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_thread.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_thread.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_timer.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_timer.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_timer.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_timer.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_timer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_timer.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_timer.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_timer.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_timer.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_timer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_timer.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_timer.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_timer.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_timer.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_timer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_timer.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_timer.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_timer.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_timer.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_timer.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_timer.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_touch.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_touch.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_touch.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_touch.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_touch.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_touch.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_touch.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_touch.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_touch.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_touch.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_touch.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_touch.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_touch.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_touch.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_touch.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_touch.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_touch.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_touch.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_touch.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_touch.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_touch.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_types.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_types.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_types.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_types.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_types.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_types.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_types.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_types.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_types.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_types.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_types.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_types.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_types.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_types.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_types.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_types.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_types.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_types.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_types.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_types.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_types.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_version.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_version.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_version.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_version.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_version.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_version.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_version.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_version.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_version.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_version.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_version.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_version.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_version.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_version.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_version.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_version.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_version.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_version.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_version.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_version.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_version.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_video.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_video.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_video.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_video.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_video.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_video.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_video.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_video.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_video.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_video.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_video.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_video.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_video.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_video.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_video.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_video.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_video.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_video.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_video.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_video.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_video.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\SDL_vulkan.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/SDL_vulkan.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_vulkan.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_vulkan.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_vulkan.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_vulkan.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/SDL_vulkan.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_vulkan.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_vulkan.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_vulkan.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_vulkan.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/SDL_vulkan.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_vulkan.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_vulkan.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_vulkan.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_vulkan.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/SDL_vulkan.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/SDL_vulkan.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/SDL_vulkan.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_vulkan.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_vulkan.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\begin_code.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/begin_code.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/begin_code.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/begin_code.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\begin_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\begin_code.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/begin_code.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/begin_code.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/begin_code.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\begin_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\begin_code.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/begin_code.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/begin_code.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/begin_code.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\begin_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\begin_code.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/begin_code.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/begin_code.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/begin_code.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\begin_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\begin_code.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\51aba0529450051fb0e24b9887aa2c3b\close_code.h.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating include/SDL2/close_code.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/close_code.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/close_code.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\close_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\close_code.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating include/SDL2/close_code.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/close_code.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/close_code.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\close_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\close_code.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating include/SDL2/close_code.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/close_code.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/close_code.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\close_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\close_code.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating include/SDL2/close_code.h</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E copy_if_different D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/include/close_code.h D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/include/SDL2/close_code.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\close_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\close_code.h</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\8e6c65803de91d5782dc56072e278172\sdl_headers_copy.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_assert.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_atomic.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_audio.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_bits.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_blendmode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_clipboard.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_copying.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_cpuinfo.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_egl.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_endian.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_error.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_events.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_filesystem.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gamecontroller.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gesture.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_guid.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_haptic.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hidapi.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hints.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_joystick.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keyboard.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keycode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_loadso.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_locale.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_log.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_main.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_messagebox.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_metal.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_misc.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mouse.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mutex.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_name.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl_glext.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2ext.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2platform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_khrplatform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_pixels.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_platform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_power.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_quit.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rect.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_render.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rwops.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_scancode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_sensor.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_shape.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_stdinc.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_surface.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_system.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_syswm.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_assert.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_common.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_compare.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_crc32.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_font.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_fuzzer.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_harness.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_images.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_log.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_md5.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_memory.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_random.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_thread.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_timer.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_touch.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_types.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_version.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_video.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_vulkan.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\begin_code.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\close_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\sdl_headers_copy</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_assert.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_atomic.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_audio.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_bits.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_blendmode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_clipboard.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_copying.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_cpuinfo.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_egl.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_endian.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_error.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_events.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_filesystem.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gamecontroller.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gesture.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_guid.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_haptic.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hidapi.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hints.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_joystick.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keyboard.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keycode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_loadso.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_locale.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_log.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_main.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_messagebox.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_metal.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_misc.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mouse.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mutex.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_name.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl_glext.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2ext.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2platform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_khrplatform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_pixels.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_platform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_power.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_quit.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rect.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_render.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rwops.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_scancode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_sensor.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_shape.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_stdinc.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_surface.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_system.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_syswm.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_assert.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_common.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_compare.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_crc32.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_font.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_fuzzer.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_harness.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_images.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_log.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_md5.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_memory.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_random.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_thread.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_timer.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_touch.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_types.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_version.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_video.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_vulkan.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\begin_code.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\close_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\sdl_headers_copy</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_assert.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_atomic.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_audio.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_bits.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_blendmode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_clipboard.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_copying.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_cpuinfo.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_egl.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_endian.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_error.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_events.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_filesystem.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gamecontroller.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gesture.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_guid.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_haptic.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hidapi.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hints.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_joystick.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keyboard.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keycode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_loadso.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_locale.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_log.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_main.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_messagebox.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_metal.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_misc.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mouse.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mutex.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_name.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl_glext.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2ext.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2platform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_khrplatform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_pixels.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_platform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_power.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_quit.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rect.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_render.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rwops.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_scancode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_sensor.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_shape.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_stdinc.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_surface.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_system.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_syswm.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_assert.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_common.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_compare.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_crc32.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_font.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_fuzzer.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_harness.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_images.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_log.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_md5.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_memory.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_random.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_thread.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_timer.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_touch.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_types.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_version.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_video.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_vulkan.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\begin_code.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\close_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\sdl_headers_copy</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_assert.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_atomic.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_audio.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_bits.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_blendmode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_clipboard.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_copying.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_cpuinfo.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_egl.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_endian.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_error.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_events.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_filesystem.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gamecontroller.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_gesture.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_guid.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_haptic.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hidapi.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_hints.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_joystick.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keyboard.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_keycode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_loadso.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_locale.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_log.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_main.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_messagebox.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_metal.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_misc.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mouse.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_mutex.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_name.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengl_glext.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2ext.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_gl2platform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_opengles2_khrplatform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_pixels.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_platform.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_power.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_quit.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rect.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_render.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_rwops.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_scancode.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_sensor.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_shape.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_stdinc.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_surface.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_system.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_syswm.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_assert.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_common.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_compare.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_crc32.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_font.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_fuzzer.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_harness.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_images.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_log.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_md5.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_memory.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_test_random.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_thread.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_timer.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_touch.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_types.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_version.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_video.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\SDL_vulkan.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\begin_code.h;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\include\SDL2\close_code.h;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\sdl_headers_copy</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SD:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6 -BD:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build --check-stamp-file D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCCompilerABI.c;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXCompilerABI.cpp;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCompilerIdDetection.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDependentOption.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCXXCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompileFeatures.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompilerABI.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompilerId.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineRCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeFindBinUtils.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseArguments.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseImplicitIncludeInfo.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseImplicitLinkInfo.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseLibraryArchitecture.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakePushCheckState.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeRCCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystem.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCXXCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCompilerCommon.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestRCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCSourceRuns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckIncludeFiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckLanguage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckOBJCSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckStructHasMember.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckSymbolExists.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ADSP-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ARMCC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ARMClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\AppleClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Borland-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Clang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Cray-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\CrayClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GHS-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GNU-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\HP-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IAR-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Intel-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\LCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\NVHPC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\OrangeC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\PGI-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\PathScale-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SCO-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TI-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TIClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Tasking-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Watcom-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XL-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\zOS-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CompilerId\VS-10.vcxproj.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindGit.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPkgConfig.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\GNUInstallDirs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CMakeDetermineLinkerId.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckSourceRuns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\FeatureTesting.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-Determine-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\SDL2.spec.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\SDL2Config.cmake.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeCCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeCXXCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeRCCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeSystem.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\SDL_config.h.intermediate;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\CheckCPUArchitecture.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\macros.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlchecks.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlfind.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlplatform.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake_uninstall.cmake.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_config.h.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_revision.h.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\sdl2-config.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\sdl2.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SD:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6 -BD:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build --check-stamp-file D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCCompilerABI.c;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXCompilerABI.cpp;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCompilerIdDetection.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDependentOption.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCXXCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompileFeatures.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompilerABI.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompilerId.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineRCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeFindBinUtils.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseArguments.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseImplicitIncludeInfo.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseImplicitLinkInfo.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseLibraryArchitecture.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakePushCheckState.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeRCCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystem.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCXXCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCompilerCommon.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestRCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCSourceRuns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckIncludeFiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckLanguage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckOBJCSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckStructHasMember.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckSymbolExists.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ADSP-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ARMCC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ARMClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\AppleClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Borland-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Clang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Cray-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\CrayClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GHS-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GNU-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\HP-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IAR-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Intel-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\LCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\NVHPC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\OrangeC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\PGI-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\PathScale-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SCO-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TI-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TIClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Tasking-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Watcom-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XL-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\zOS-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CompilerId\VS-10.vcxproj.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindGit.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPkgConfig.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\GNUInstallDirs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CMakeDetermineLinkerId.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckSourceRuns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\FeatureTesting.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-Determine-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\SDL2.spec.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\SDL2Config.cmake.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeCCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeCXXCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeRCCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeSystem.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\SDL_config.h.intermediate;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\CheckCPUArchitecture.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\macros.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlchecks.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlfind.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlplatform.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake_uninstall.cmake.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_config.h.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_revision.h.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\sdl2-config.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\sdl2.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SD:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6 -BD:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build --check-stamp-file D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCCompilerABI.c;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXCompilerABI.cpp;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCompilerIdDetection.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDependentOption.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCXXCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompileFeatures.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompilerABI.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompilerId.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineRCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeFindBinUtils.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseArguments.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseImplicitIncludeInfo.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseImplicitLinkInfo.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseLibraryArchitecture.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakePushCheckState.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeRCCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystem.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCXXCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCompilerCommon.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestRCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCSourceRuns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckIncludeFiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckLanguage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckOBJCSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckStructHasMember.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckSymbolExists.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ADSP-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ARMCC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ARMClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\AppleClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Borland-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Clang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Cray-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\CrayClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GHS-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GNU-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\HP-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IAR-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Intel-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\LCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\NVHPC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\OrangeC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\PGI-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\PathScale-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SCO-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TI-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TIClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Tasking-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Watcom-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XL-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\zOS-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CompilerId\VS-10.vcxproj.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindGit.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPkgConfig.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\GNUInstallDirs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CMakeDetermineLinkerId.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckSourceRuns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\FeatureTesting.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-Determine-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\SDL2.spec.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\SDL2Config.cmake.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeCCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeCXXCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeRCCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeSystem.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\SDL_config.h.intermediate;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\CheckCPUArchitecture.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\macros.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlchecks.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlfind.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlplatform.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake_uninstall.cmake.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_config.h.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_revision.h.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\sdl2-config.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\sdl2.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -SD:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6 -BD:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build --check-stamp-file D:/github-intellidea/PARALLEL_LAUNCHER/!third_party_libs/SDL2-2.30.6/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCCompilerABI.c;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXCompilerABI.cpp;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeCompilerIdDetection.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDependentOption.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCXXCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompileFeatures.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompilerABI.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineCompilerId.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineRCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeDetermineSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeFindBinUtils.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseArguments.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseImplicitIncludeInfo.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseImplicitLinkInfo.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeParseLibraryArchitecture.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakePushCheckState.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeRCCompiler.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystem.cmake.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCXXCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestCompilerCommon.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CMakeTestRCCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCSourceRuns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckIncludeFiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckLanguage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckOBJCSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckStructHasMember.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CheckSymbolExists.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ADSP-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ARMCC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\ARMClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\AppleClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Borland-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Clang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Cray-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\CrayClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GHS-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GNU-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\HP-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IAR-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Intel-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\LCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\NVHPC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\OrangeC-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\PGI-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\PathScale-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SCO-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TI-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TIClang-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Tasking-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\Watcom-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XL-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\zOS-C-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\CompilerId\VS-10.vcxproj.in;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindGit.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\FindPkgConfig.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\GNUInstallDirs.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CMakeDetermineLinkerId.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\CheckSourceRuns.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Internal\FeatureTesting.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-Determine-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\SDL2.spec.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\SDL2Config.cmake.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeCCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeCXXCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeRCCompiler.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\3.29.5-msvc4\CMakeSystem.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\SDL_config.h.intermediate;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\CheckCPUArchitecture.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\macros.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlchecks.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlfind.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake\sdlplatform.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\cmake_uninstall.cmake.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_config.h.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\include\SDL_revision.h.cmake;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\sdl2-config.in;D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\sdl2.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\CMakeFiles\sdl_headers_copy">
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\github-intellidea\PARALLEL_LAUNCHER\!third_party_libs\SDL2-2.30.6\build\ZERO_CHECK.vcxproj">
      <Project>{A6693803-75E1-3B58-B5F5-4D7F85BBD310}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>